// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gcsystemmsgs.proto

#if _MSC_VER >= 1300
#ifndef _PS3
#pragma warning(push)
#pragma warning(disable : 4530)	// warning C4530: C++ exception handler used, but unwind semantics are not enabled. Specify /EHsc (disabled due to std headers having exception syntax)
#pragma warning(disable : 4512)	// warning C4512: assignment operator could not be generated
#pragma warning(disable : 4244)	// warning C4244:  warning C4244: '=' : conversion from '__w64 int' to 'int', possible loss of data
#pragma warning(disable : 4267)	// warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
#pragma warning(disable : 4125)	// warning C4125: decimal digit terminates octal escape sequence
#pragma warning(disable : 4127)	// warning C4127: conditional expression is constant
#pragma warning(disable : 4100)	// warning C4100: 'op' : unreferenced formal parameter
#endif // _PS3
#endif // _MSC_VER
#if _GNUC
#ifndef _PS3
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wshadow"
#endif // _PS3
#endif // _GNUC

#ifndef PROTOBUF_gcsystemmsgs_2eproto__INCLUDED
#define PROTOBUF_gcsystemmsgs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_gcsystemmsgs_2eproto();
void protobuf_AssignDesc_gcsystemmsgs_2eproto();
void protobuf_ShutdownFile_gcsystemmsgs_2eproto();

class CCommunity_GamePersonalDataCategoryInfo;
class CCommunity_GetGamePersonalDataCategories_Request;
class CCommunity_GetGamePersonalDataCategories_Response;
class CCommunity_GetGamePersonalDataEntries_Request;
class CCommunity_GetGamePersonalDataEntries_Response;
class CCommunity_TerminateGamePersonalDataEntries_Request;
class CCommunity_TerminateGamePersonalDataEntries_Response;

enum EGCSystemMsg {
  k_EGCMsgInvalid = 0,
  k_EGCMsgMulti = 1,
  k_EGCMsgGenericReply = 10,
  k_EGCMsgSystemBase = 50,
  k_EGCMsgAchievementAwarded = 51,
  k_EGCMsgConCommand = 52,
  k_EGCMsgStartPlaying = 53,
  k_EGCMsgStopPlaying = 54,
  k_EGCMsgStartGameserver = 55,
  k_EGCMsgStopGameserver = 56,
  k_EGCMsgWGRequest = 57,
  k_EGCMsgWGResponse = 58,
  k_EGCMsgGetUserGameStatsSchema = 59,
  k_EGCMsgGetUserGameStatsSchemaResponse = 60,
  k_EGCMsgGetUserStatsDEPRECATED = 61,
  k_EGCMsgGetUserStatsResponse = 62,
  k_EGCMsgAppInfoUpdated = 63,
  k_EGCMsgValidateSession = 64,
  k_EGCMsgValidateSessionResponse = 65,
  k_EGCMsgLookupAccountFromInput = 66,
  k_EGCMsgSendHTTPRequest = 67,
  k_EGCMsgSendHTTPRequestResponse = 68,
  k_EGCMsgPreTestSetup = 69,
  k_EGCMsgRecordSupportAction = 70,
  k_EGCMsgGetAccountDetails_DEPRECATED = 71,
  k_EGCMsgReceiveInterAppMessage = 73,
  k_EGCMsgFindAccounts = 74,
  k_EGCMsgPostAlert = 75,
  k_EGCMsgGetLicenses = 76,
  k_EGCMsgGetUserStats = 77,
  k_EGCMsgGetCommands = 78,
  k_EGCMsgGetCommandsResponse = 79,
  k_EGCMsgAddFreeLicense = 80,
  k_EGCMsgAddFreeLicenseResponse = 81,
  k_EGCMsgGetIPLocation = 82,
  k_EGCMsgGetIPLocationResponse = 83,
  k_EGCMsgSystemStatsSchema = 84,
  k_EGCMsgGetSystemStats = 85,
  k_EGCMsgGetSystemStatsResponse = 86,
  k_EGCMsgSendEmail = 87,
  k_EGCMsgSendEmailResponse = 88,
  k_EGCMsgGetEmailTemplate = 89,
  k_EGCMsgGetEmailTemplateResponse = 90,
  k_EGCMsgGrantGuestPass = 91,
  k_EGCMsgGrantGuestPassResponse = 92,
  k_EGCMsgGetAccountDetails = 93,
  k_EGCMsgGetAccountDetailsResponse = 94,
  k_EGCMsgGetPersonaNames = 95,
  k_EGCMsgGetPersonaNamesResponse = 96,
  k_EGCMsgMultiplexMsg = 97,
  k_EGCMsgWebAPIRegisterInterfaces = 101,
  k_EGCMsgWebAPIJobRequest = 102,
  k_EGCMsgWebAPIJobRequestHttpResponse = 104,
  k_EGCMsgWebAPIJobRequestForwardResponse = 105,
  k_EGCMsgMemCachedGet = 200,
  k_EGCMsgMemCachedGetResponse = 201,
  k_EGCMsgMemCachedSet = 202,
  k_EGCMsgMemCachedDelete = 203,
  k_EGCMsgMemCachedStats = 204,
  k_EGCMsgMemCachedStatsResponse = 205,
  k_EGCMsgSQLStats = 210,
  k_EGCMsgSQLStatsResponse = 211,
  k_EGCMsgMasterSetDirectory = 220,
  k_EGCMsgMasterSetDirectoryResponse = 221,
  k_EGCMsgMasterSetWebAPIRouting = 222,
  k_EGCMsgMasterSetWebAPIRoutingResponse = 223,
  k_EGCMsgMasterSetClientMsgRouting = 224,
  k_EGCMsgMasterSetClientMsgRoutingResponse = 225,
  k_EGCMsgSetOptions = 226,
  k_EGCMsgSetOptionsResponse = 227,
  k_EGCMsgSystemBase2 = 500,
  k_EGCMsgGetPurchaseTrustStatus = 501,
  k_EGCMsgGetPurchaseTrustStatusResponse = 502,
  k_EGCMsgUpdateSession = 503,
  k_EGCMsgGCAccountVacStatusChange = 504,
  k_EGCMsgCheckFriendship = 505,
  k_EGCMsgCheckFriendshipResponse = 506,
  k_EGCMsgGetPartnerAccountLink = 507,
  k_EGCMsgGetPartnerAccountLinkResponse = 508,
  k_EGCMsgVSReportedSuspiciousActivity = 509,
  k_EGCMsgAccountTradeBanStatusChange = 510,
  k_EGCMsgAccountLockStatusChange = 511,
  k_EGCMsgDPPartnerMicroTxns = 512,
  k_EGCMsgDPPartnerMicroTxnsResponse = 513,
  k_EGCMsgGetIPASN = 514,
  k_EGCMsgGetIPASNResponse = 515,
  k_EGCMsgGetAppFriendsList = 516,
  k_EGCMsgGetAppFriendsListResponse = 517,
  k_EGCMsgVacVerificationChange = 518,
  k_EGCMsgAccountPhoneNumberChange = 519,
  k_EGCMsgAccountTwoFactorChange = 520,
  k_EGCMsgCheckClanMembership = 521,
  k_EGCMsgCheckClanMembershipResponse = 522,
  k_EGCMsgInviteUserToLobby = 523,
  k_EGCMsgGetGamePersonalDataCategoriesRequest = 524,
  k_EGCMsgGetGamePersonalDataCategoriesResponse = 525,
  k_EGCMsgGetGamePersonalDataEntriesRequest = 526,
  k_EGCMsgGetGamePersonalDataEntriesResponse = 527,
  k_EGCMsgTerminateGamePersonalDataEntriesRequest = 528,
  k_EGCMsgTerminateGamePersonalDataEntriesResponse = 529
};
bool EGCSystemMsg_IsValid(int value);
const EGCSystemMsg EGCSystemMsg_MIN = k_EGCMsgInvalid;
const EGCSystemMsg EGCSystemMsg_MAX = k_EGCMsgTerminateGamePersonalDataEntriesResponse;
const int EGCSystemMsg_ARRAYSIZE = EGCSystemMsg_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGCSystemMsg_descriptor();
inline const ::std::string& EGCSystemMsg_Name(EGCSystemMsg value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGCSystemMsg_descriptor(), value);
}
inline bool EGCSystemMsg_Parse(
    const ::std::string& name, EGCSystemMsg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGCSystemMsg>(
    EGCSystemMsg_descriptor(), name, value);
}
enum ESOMsg {
  k_ESOMsg_Create = 21,
  k_ESOMsg_Update = 22,
  k_ESOMsg_Destroy = 23,
  k_ESOMsg_CacheSubscribed = 24,
  k_ESOMsg_CacheUnsubscribed = 25,
  k_ESOMsg_UpdateMultiple = 26,
  k_ESOMsg_CacheSubscriptionCheck = 27,
  k_ESOMsg_CacheSubscriptionRefresh = 28,
  k_ESOMsg_CacheSubscribedUpToDate = 29
};
bool ESOMsg_IsValid(int value);
const ESOMsg ESOMsg_MIN = k_ESOMsg_Create;
const ESOMsg ESOMsg_MAX = k_ESOMsg_CacheSubscribedUpToDate;
const int ESOMsg_ARRAYSIZE = ESOMsg_MAX + 1;

const ::google::protobuf::EnumDescriptor* ESOMsg_descriptor();
inline const ::std::string& ESOMsg_Name(ESOMsg value) {
  return ::google::protobuf::internal::NameOfEnum(
    ESOMsg_descriptor(), value);
}
inline bool ESOMsg_Parse(
    const ::std::string& name, ESOMsg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESOMsg>(
    ESOMsg_descriptor(), name, value);
}
enum EGCBaseClientMsg {
  k_EMsgGCPingRequest = 3001,
  k_EMsgGCPingResponse = 3002,
  k_EMsgGCClientWelcome = 4004,
  k_EMsgGCServerWelcome = 4005,
  k_EMsgGCClientHello = 4006,
  k_EMsgGCServerHello = 4007,
  k_EMsgGCClientGoodbye = 4008,
  k_EMsgGCServerGoodbye = 4009
};
bool EGCBaseClientMsg_IsValid(int value);
const EGCBaseClientMsg EGCBaseClientMsg_MIN = k_EMsgGCPingRequest;
const EGCBaseClientMsg EGCBaseClientMsg_MAX = k_EMsgGCServerGoodbye;
const int EGCBaseClientMsg_ARRAYSIZE = EGCBaseClientMsg_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGCBaseClientMsg_descriptor();
inline const ::std::string& EGCBaseClientMsg_Name(EGCBaseClientMsg value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGCBaseClientMsg_descriptor(), value);
}
inline bool EGCBaseClientMsg_Parse(
    const ::std::string& name, EGCBaseClientMsg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGCBaseClientMsg>(
    EGCBaseClientMsg_descriptor(), name, value);
}
enum EGCToGCMsg {
  k_EGCToGCMsgMasterAck = 150,
  k_EGCToGCMsgMasterAckResponse = 151,
  k_EGCToGCMsgRouted = 152,
  k_EGCToGCMsgRoutedReply = 153,
  k_EMsgGCUpdateSubGCSessionInfo = 154,
  k_EMsgGCRequestSubGCSessionInfo = 155,
  k_EMsgGCRequestSubGCSessionInfoResponse = 156,
  k_EGCToGCMsgMasterStartupComplete = 157,
  k_EMsgGCToGCSOCacheSubscribe = 158,
  k_EMsgGCToGCSOCacheUnsubscribe = 159
};
bool EGCToGCMsg_IsValid(int value);
const EGCToGCMsg EGCToGCMsg_MIN = k_EGCToGCMsgMasterAck;
const EGCToGCMsg EGCToGCMsg_MAX = k_EMsgGCToGCSOCacheUnsubscribe;
const int EGCToGCMsg_ARRAYSIZE = EGCToGCMsg_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGCToGCMsg_descriptor();
inline const ::std::string& EGCToGCMsg_Name(EGCToGCMsg value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGCToGCMsg_descriptor(), value);
}
inline bool EGCToGCMsg_Parse(
    const ::std::string& name, EGCToGCMsg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGCToGCMsg>(
    EGCToGCMsg_descriptor(), name, value);
}
// ===================================================================

class CCommunity_GamePersonalDataCategoryInfo : public ::google::protobuf::Message {
 public:
  CCommunity_GamePersonalDataCategoryInfo();
  virtual ~CCommunity_GamePersonalDataCategoryInfo();
  
  CCommunity_GamePersonalDataCategoryInfo(const CCommunity_GamePersonalDataCategoryInfo& from);
  
  inline CCommunity_GamePersonalDataCategoryInfo& operator=(const CCommunity_GamePersonalDataCategoryInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCommunity_GamePersonalDataCategoryInfo& default_instance();
  
  void Swap(CCommunity_GamePersonalDataCategoryInfo* other);
  
  // implements Message ----------------------------------------------
  
  CCommunity_GamePersonalDataCategoryInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCommunity_GamePersonalDataCategoryInfo& from);
  void MergeFrom(const CCommunity_GamePersonalDataCategoryInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  
  // optional string localization_token = 2;
  inline bool has_localization_token() const;
  inline void clear_localization_token();
  static const int kLocalizationTokenFieldNumber = 2;
  inline const ::std::string& localization_token() const;
  inline void set_localization_token(const ::std::string& value);
  inline void set_localization_token(const char* value);
  inline void set_localization_token(const char* value, size_t size);
  inline ::std::string* mutable_localization_token();
  
  // optional string template_file = 3;
  inline bool has_template_file() const;
  inline void clear_template_file();
  static const int kTemplateFileFieldNumber = 3;
  inline const ::std::string& template_file() const;
  inline void set_template_file(const ::std::string& value);
  inline void set_template_file(const char* value);
  inline void set_template_file(const char* value, size_t size);
  inline ::std::string* mutable_template_file();
  
  // @@protoc_insertion_point(class_scope:CCommunity_GamePersonalDataCategoryInfo)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* type_;
  static const ::std::string _default_type_;
  ::std::string* localization_token_;
  static const ::std::string _default_localization_token_;
  ::std::string* template_file_;
  static const ::std::string _default_template_file_;
  friend void  protobuf_AddDesc_gcsystemmsgs_2eproto();
  friend void protobuf_AssignDesc_gcsystemmsgs_2eproto();
  friend void protobuf_ShutdownFile_gcsystemmsgs_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCommunity_GamePersonalDataCategoryInfo* default_instance_;
};
// -------------------------------------------------------------------

class CCommunity_GetGamePersonalDataCategories_Request : public ::google::protobuf::Message {
 public:
  CCommunity_GetGamePersonalDataCategories_Request();
  virtual ~CCommunity_GetGamePersonalDataCategories_Request();
  
  CCommunity_GetGamePersonalDataCategories_Request(const CCommunity_GetGamePersonalDataCategories_Request& from);
  
  inline CCommunity_GetGamePersonalDataCategories_Request& operator=(const CCommunity_GetGamePersonalDataCategories_Request& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCommunity_GetGamePersonalDataCategories_Request& default_instance();
  
  void Swap(CCommunity_GetGamePersonalDataCategories_Request* other);
  
  // implements Message ----------------------------------------------
  
  CCommunity_GetGamePersonalDataCategories_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCommunity_GetGamePersonalDataCategories_Request& from);
  void MergeFrom(const CCommunity_GetGamePersonalDataCategories_Request& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 appid = 1;
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppidFieldNumber = 1;
  inline ::google::protobuf::uint32 appid() const;
  inline void set_appid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CCommunity_GetGamePersonalDataCategories_Request)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 appid_;
  friend void  protobuf_AddDesc_gcsystemmsgs_2eproto();
  friend void protobuf_AssignDesc_gcsystemmsgs_2eproto();
  friend void protobuf_ShutdownFile_gcsystemmsgs_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCommunity_GetGamePersonalDataCategories_Request* default_instance_;
};
// -------------------------------------------------------------------

class CCommunity_GetGamePersonalDataCategories_Response : public ::google::protobuf::Message {
 public:
  CCommunity_GetGamePersonalDataCategories_Response();
  virtual ~CCommunity_GetGamePersonalDataCategories_Response();
  
  CCommunity_GetGamePersonalDataCategories_Response(const CCommunity_GetGamePersonalDataCategories_Response& from);
  
  inline CCommunity_GetGamePersonalDataCategories_Response& operator=(const CCommunity_GetGamePersonalDataCategories_Response& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCommunity_GetGamePersonalDataCategories_Response& default_instance();
  
  void Swap(CCommunity_GetGamePersonalDataCategories_Response* other);
  
  // implements Message ----------------------------------------------
  
  CCommunity_GetGamePersonalDataCategories_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCommunity_GetGamePersonalDataCategories_Response& from);
  void MergeFrom(const CCommunity_GetGamePersonalDataCategories_Response& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CCommunity_GamePersonalDataCategoryInfo categories = 1;
  inline int categories_size() const;
  inline void clear_categories();
  static const int kCategoriesFieldNumber = 1;
  inline const ::CCommunity_GamePersonalDataCategoryInfo& categories(int index) const;
  inline ::CCommunity_GamePersonalDataCategoryInfo* mutable_categories(int index);
  inline ::CCommunity_GamePersonalDataCategoryInfo* add_categories();
  inline const ::google::protobuf::RepeatedPtrField< ::CCommunity_GamePersonalDataCategoryInfo >&
      categories() const;
  inline ::google::protobuf::RepeatedPtrField< ::CCommunity_GamePersonalDataCategoryInfo >*
      mutable_categories();
  
  // optional string app_assets_basename = 2;
  inline bool has_app_assets_basename() const;
  inline void clear_app_assets_basename();
  static const int kAppAssetsBasenameFieldNumber = 2;
  inline const ::std::string& app_assets_basename() const;
  inline void set_app_assets_basename(const ::std::string& value);
  inline void set_app_assets_basename(const char* value);
  inline void set_app_assets_basename(const char* value, size_t size);
  inline ::std::string* mutable_app_assets_basename();
  
  // @@protoc_insertion_point(class_scope:CCommunity_GetGamePersonalDataCategories_Response)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::CCommunity_GamePersonalDataCategoryInfo > categories_;
  ::std::string* app_assets_basename_;
  static const ::std::string _default_app_assets_basename_;
  friend void  protobuf_AddDesc_gcsystemmsgs_2eproto();
  friend void protobuf_AssignDesc_gcsystemmsgs_2eproto();
  friend void protobuf_ShutdownFile_gcsystemmsgs_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCommunity_GetGamePersonalDataCategories_Response* default_instance_;
};
// -------------------------------------------------------------------

class CCommunity_GetGamePersonalDataEntries_Request : public ::google::protobuf::Message {
 public:
  CCommunity_GetGamePersonalDataEntries_Request();
  virtual ~CCommunity_GetGamePersonalDataEntries_Request();
  
  CCommunity_GetGamePersonalDataEntries_Request(const CCommunity_GetGamePersonalDataEntries_Request& from);
  
  inline CCommunity_GetGamePersonalDataEntries_Request& operator=(const CCommunity_GetGamePersonalDataEntries_Request& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCommunity_GetGamePersonalDataEntries_Request& default_instance();
  
  void Swap(CCommunity_GetGamePersonalDataEntries_Request* other);
  
  // implements Message ----------------------------------------------
  
  CCommunity_GetGamePersonalDataEntries_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCommunity_GetGamePersonalDataEntries_Request& from);
  void MergeFrom(const CCommunity_GetGamePersonalDataEntries_Request& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 appid = 1;
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppidFieldNumber = 1;
  inline ::google::protobuf::uint32 appid() const;
  inline void set_appid(::google::protobuf::uint32 value);
  
  // optional uint64 steamid = 2;
  inline bool has_steamid() const;
  inline void clear_steamid();
  static const int kSteamidFieldNumber = 2;
  inline ::google::protobuf::uint64 steamid() const;
  inline void set_steamid(::google::protobuf::uint64 value);
  
  // optional string type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  
  // optional string continue_token = 4;
  inline bool has_continue_token() const;
  inline void clear_continue_token();
  static const int kContinueTokenFieldNumber = 4;
  inline const ::std::string& continue_token() const;
  inline void set_continue_token(const ::std::string& value);
  inline void set_continue_token(const char* value);
  inline void set_continue_token(const char* value, size_t size);
  inline ::std::string* mutable_continue_token();
  
  // @@protoc_insertion_point(class_scope:CCommunity_GetGamePersonalDataEntries_Request)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 appid_;
  ::google::protobuf::uint64 steamid_;
  ::std::string* type_;
  static const ::std::string _default_type_;
  ::std::string* continue_token_;
  static const ::std::string _default_continue_token_;
  friend void  protobuf_AddDesc_gcsystemmsgs_2eproto();
  friend void protobuf_AssignDesc_gcsystemmsgs_2eproto();
  friend void protobuf_ShutdownFile_gcsystemmsgs_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCommunity_GetGamePersonalDataEntries_Request* default_instance_;
};
// -------------------------------------------------------------------

class CCommunity_GetGamePersonalDataEntries_Response : public ::google::protobuf::Message {
 public:
  CCommunity_GetGamePersonalDataEntries_Response();
  virtual ~CCommunity_GetGamePersonalDataEntries_Response();
  
  CCommunity_GetGamePersonalDataEntries_Response(const CCommunity_GetGamePersonalDataEntries_Response& from);
  
  inline CCommunity_GetGamePersonalDataEntries_Response& operator=(const CCommunity_GetGamePersonalDataEntries_Response& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCommunity_GetGamePersonalDataEntries_Response& default_instance();
  
  void Swap(CCommunity_GetGamePersonalDataEntries_Response* other);
  
  // implements Message ----------------------------------------------
  
  CCommunity_GetGamePersonalDataEntries_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCommunity_GetGamePersonalDataEntries_Response& from);
  void MergeFrom(const CCommunity_GetGamePersonalDataEntries_Response& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 gceresult = 1;
  inline bool has_gceresult() const;
  inline void clear_gceresult();
  static const int kGceresultFieldNumber = 1;
  inline ::google::protobuf::uint32 gceresult() const;
  inline void set_gceresult(::google::protobuf::uint32 value);
  
  // repeated string entries = 2;
  inline int entries_size() const;
  inline void clear_entries();
  static const int kEntriesFieldNumber = 2;
  inline const ::std::string& entries(int index) const;
  inline ::std::string* mutable_entries(int index);
  inline void set_entries(int index, const ::std::string& value);
  inline void set_entries(int index, const char* value);
  inline void set_entries(int index, const char* value, size_t size);
  inline ::std::string* add_entries();
  inline void add_entries(const ::std::string& value);
  inline void add_entries(const char* value);
  inline void add_entries(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& entries() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_entries();
  
  // optional string continue_token = 3;
  inline bool has_continue_token() const;
  inline void clear_continue_token();
  static const int kContinueTokenFieldNumber = 3;
  inline const ::std::string& continue_token() const;
  inline void set_continue_token(const ::std::string& value);
  inline void set_continue_token(const char* value);
  inline void set_continue_token(const char* value, size_t size);
  inline ::std::string* mutable_continue_token();
  
  // @@protoc_insertion_point(class_scope:CCommunity_GetGamePersonalDataEntries_Response)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 gceresult_;
  ::google::protobuf::RepeatedPtrField< ::std::string> entries_;
  ::std::string* continue_token_;
  static const ::std::string _default_continue_token_;
  friend void  protobuf_AddDesc_gcsystemmsgs_2eproto();
  friend void protobuf_AssignDesc_gcsystemmsgs_2eproto();
  friend void protobuf_ShutdownFile_gcsystemmsgs_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCommunity_GetGamePersonalDataEntries_Response* default_instance_;
};
// -------------------------------------------------------------------

class CCommunity_TerminateGamePersonalDataEntries_Request : public ::google::protobuf::Message {
 public:
  CCommunity_TerminateGamePersonalDataEntries_Request();
  virtual ~CCommunity_TerminateGamePersonalDataEntries_Request();
  
  CCommunity_TerminateGamePersonalDataEntries_Request(const CCommunity_TerminateGamePersonalDataEntries_Request& from);
  
  inline CCommunity_TerminateGamePersonalDataEntries_Request& operator=(const CCommunity_TerminateGamePersonalDataEntries_Request& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCommunity_TerminateGamePersonalDataEntries_Request& default_instance();
  
  void Swap(CCommunity_TerminateGamePersonalDataEntries_Request* other);
  
  // implements Message ----------------------------------------------
  
  CCommunity_TerminateGamePersonalDataEntries_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCommunity_TerminateGamePersonalDataEntries_Request& from);
  void MergeFrom(const CCommunity_TerminateGamePersonalDataEntries_Request& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 appid = 1;
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppidFieldNumber = 1;
  inline ::google::protobuf::uint32 appid() const;
  inline void set_appid(::google::protobuf::uint32 value);
  
  // optional uint64 steamid = 2;
  inline bool has_steamid() const;
  inline void clear_steamid();
  static const int kSteamidFieldNumber = 2;
  inline ::google::protobuf::uint64 steamid() const;
  inline void set_steamid(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CCommunity_TerminateGamePersonalDataEntries_Request)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 appid_;
  ::google::protobuf::uint64 steamid_;
  friend void  protobuf_AddDesc_gcsystemmsgs_2eproto();
  friend void protobuf_AssignDesc_gcsystemmsgs_2eproto();
  friend void protobuf_ShutdownFile_gcsystemmsgs_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCommunity_TerminateGamePersonalDataEntries_Request* default_instance_;
};
// -------------------------------------------------------------------

class CCommunity_TerminateGamePersonalDataEntries_Response : public ::google::protobuf::Message {
 public:
  CCommunity_TerminateGamePersonalDataEntries_Response();
  virtual ~CCommunity_TerminateGamePersonalDataEntries_Response();
  
  CCommunity_TerminateGamePersonalDataEntries_Response(const CCommunity_TerminateGamePersonalDataEntries_Response& from);
  
  inline CCommunity_TerminateGamePersonalDataEntries_Response& operator=(const CCommunity_TerminateGamePersonalDataEntries_Response& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCommunity_TerminateGamePersonalDataEntries_Response& default_instance();
  
  void Swap(CCommunity_TerminateGamePersonalDataEntries_Response* other);
  
  // implements Message ----------------------------------------------
  
  CCommunity_TerminateGamePersonalDataEntries_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCommunity_TerminateGamePersonalDataEntries_Response& from);
  void MergeFrom(const CCommunity_TerminateGamePersonalDataEntries_Response& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 gceresult = 1;
  inline bool has_gceresult() const;
  inline void clear_gceresult();
  static const int kGceresultFieldNumber = 1;
  inline ::google::protobuf::uint32 gceresult() const;
  inline void set_gceresult(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CCommunity_TerminateGamePersonalDataEntries_Response)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 gceresult_;
  friend void  protobuf_AddDesc_gcsystemmsgs_2eproto();
  friend void protobuf_AssignDesc_gcsystemmsgs_2eproto();
  friend void protobuf_ShutdownFile_gcsystemmsgs_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCommunity_TerminateGamePersonalDataEntries_Response* default_instance_;
};
// ===================================================================


// ===================================================================

// CCommunity_GamePersonalDataCategoryInfo

// optional string type = 1;
inline bool CCommunity_GamePersonalDataCategoryInfo::has_type() const {
  return _has_bit(0);
}
inline void CCommunity_GamePersonalDataCategoryInfo::clear_type() {
  if (type_ != &_default_type_) {
    type_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CCommunity_GamePersonalDataCategoryInfo::type() const {
  return *type_;
}
inline void CCommunity_GamePersonalDataCategoryInfo::set_type(const ::std::string& value) {
  _set_bit(0);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void CCommunity_GamePersonalDataCategoryInfo::set_type(const char* value) {
  _set_bit(0);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void CCommunity_GamePersonalDataCategoryInfo::set_type(const char* value, size_t size) {
  _set_bit(0);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCommunity_GamePersonalDataCategoryInfo::mutable_type() {
  _set_bit(0);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  return type_;
}

// optional string localization_token = 2;
inline bool CCommunity_GamePersonalDataCategoryInfo::has_localization_token() const {
  return _has_bit(1);
}
inline void CCommunity_GamePersonalDataCategoryInfo::clear_localization_token() {
  if (localization_token_ != &_default_localization_token_) {
    localization_token_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CCommunity_GamePersonalDataCategoryInfo::localization_token() const {
  return *localization_token_;
}
inline void CCommunity_GamePersonalDataCategoryInfo::set_localization_token(const ::std::string& value) {
  _set_bit(1);
  if (localization_token_ == &_default_localization_token_) {
    localization_token_ = new ::std::string;
  }
  localization_token_->assign(value);
}
inline void CCommunity_GamePersonalDataCategoryInfo::set_localization_token(const char* value) {
  _set_bit(1);
  if (localization_token_ == &_default_localization_token_) {
    localization_token_ = new ::std::string;
  }
  localization_token_->assign(value);
}
inline void CCommunity_GamePersonalDataCategoryInfo::set_localization_token(const char* value, size_t size) {
  _set_bit(1);
  if (localization_token_ == &_default_localization_token_) {
    localization_token_ = new ::std::string;
  }
  localization_token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCommunity_GamePersonalDataCategoryInfo::mutable_localization_token() {
  _set_bit(1);
  if (localization_token_ == &_default_localization_token_) {
    localization_token_ = new ::std::string;
  }
  return localization_token_;
}

// optional string template_file = 3;
inline bool CCommunity_GamePersonalDataCategoryInfo::has_template_file() const {
  return _has_bit(2);
}
inline void CCommunity_GamePersonalDataCategoryInfo::clear_template_file() {
  if (template_file_ != &_default_template_file_) {
    template_file_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CCommunity_GamePersonalDataCategoryInfo::template_file() const {
  return *template_file_;
}
inline void CCommunity_GamePersonalDataCategoryInfo::set_template_file(const ::std::string& value) {
  _set_bit(2);
  if (template_file_ == &_default_template_file_) {
    template_file_ = new ::std::string;
  }
  template_file_->assign(value);
}
inline void CCommunity_GamePersonalDataCategoryInfo::set_template_file(const char* value) {
  _set_bit(2);
  if (template_file_ == &_default_template_file_) {
    template_file_ = new ::std::string;
  }
  template_file_->assign(value);
}
inline void CCommunity_GamePersonalDataCategoryInfo::set_template_file(const char* value, size_t size) {
  _set_bit(2);
  if (template_file_ == &_default_template_file_) {
    template_file_ = new ::std::string;
  }
  template_file_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCommunity_GamePersonalDataCategoryInfo::mutable_template_file() {
  _set_bit(2);
  if (template_file_ == &_default_template_file_) {
    template_file_ = new ::std::string;
  }
  return template_file_;
}

// -------------------------------------------------------------------

// CCommunity_GetGamePersonalDataCategories_Request

// optional uint32 appid = 1;
inline bool CCommunity_GetGamePersonalDataCategories_Request::has_appid() const {
  return _has_bit(0);
}
inline void CCommunity_GetGamePersonalDataCategories_Request::clear_appid() {
  appid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CCommunity_GetGamePersonalDataCategories_Request::appid() const {
  return appid_;
}
inline void CCommunity_GetGamePersonalDataCategories_Request::set_appid(::google::protobuf::uint32 value) {
  _set_bit(0);
  appid_ = value;
}

// -------------------------------------------------------------------

// CCommunity_GetGamePersonalDataCategories_Response

// repeated .CCommunity_GamePersonalDataCategoryInfo categories = 1;
inline int CCommunity_GetGamePersonalDataCategories_Response::categories_size() const {
  return categories_.size();
}
inline void CCommunity_GetGamePersonalDataCategories_Response::clear_categories() {
  categories_.Clear();
}
inline const ::CCommunity_GamePersonalDataCategoryInfo& CCommunity_GetGamePersonalDataCategories_Response::categories(int index) const {
  return categories_.Get(index);
}
inline ::CCommunity_GamePersonalDataCategoryInfo* CCommunity_GetGamePersonalDataCategories_Response::mutable_categories(int index) {
  return categories_.Mutable(index);
}
inline ::CCommunity_GamePersonalDataCategoryInfo* CCommunity_GetGamePersonalDataCategories_Response::add_categories() {
  return categories_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CCommunity_GamePersonalDataCategoryInfo >&
CCommunity_GetGamePersonalDataCategories_Response::categories() const {
  return categories_;
}
inline ::google::protobuf::RepeatedPtrField< ::CCommunity_GamePersonalDataCategoryInfo >*
CCommunity_GetGamePersonalDataCategories_Response::mutable_categories() {
  return &categories_;
}

// optional string app_assets_basename = 2;
inline bool CCommunity_GetGamePersonalDataCategories_Response::has_app_assets_basename() const {
  return _has_bit(1);
}
inline void CCommunity_GetGamePersonalDataCategories_Response::clear_app_assets_basename() {
  if (app_assets_basename_ != &_default_app_assets_basename_) {
    app_assets_basename_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CCommunity_GetGamePersonalDataCategories_Response::app_assets_basename() const {
  return *app_assets_basename_;
}
inline void CCommunity_GetGamePersonalDataCategories_Response::set_app_assets_basename(const ::std::string& value) {
  _set_bit(1);
  if (app_assets_basename_ == &_default_app_assets_basename_) {
    app_assets_basename_ = new ::std::string;
  }
  app_assets_basename_->assign(value);
}
inline void CCommunity_GetGamePersonalDataCategories_Response::set_app_assets_basename(const char* value) {
  _set_bit(1);
  if (app_assets_basename_ == &_default_app_assets_basename_) {
    app_assets_basename_ = new ::std::string;
  }
  app_assets_basename_->assign(value);
}
inline void CCommunity_GetGamePersonalDataCategories_Response::set_app_assets_basename(const char* value, size_t size) {
  _set_bit(1);
  if (app_assets_basename_ == &_default_app_assets_basename_) {
    app_assets_basename_ = new ::std::string;
  }
  app_assets_basename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCommunity_GetGamePersonalDataCategories_Response::mutable_app_assets_basename() {
  _set_bit(1);
  if (app_assets_basename_ == &_default_app_assets_basename_) {
    app_assets_basename_ = new ::std::string;
  }
  return app_assets_basename_;
}

// -------------------------------------------------------------------

// CCommunity_GetGamePersonalDataEntries_Request

// optional uint32 appid = 1;
inline bool CCommunity_GetGamePersonalDataEntries_Request::has_appid() const {
  return _has_bit(0);
}
inline void CCommunity_GetGamePersonalDataEntries_Request::clear_appid() {
  appid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CCommunity_GetGamePersonalDataEntries_Request::appid() const {
  return appid_;
}
inline void CCommunity_GetGamePersonalDataEntries_Request::set_appid(::google::protobuf::uint32 value) {
  _set_bit(0);
  appid_ = value;
}

// optional uint64 steamid = 2;
inline bool CCommunity_GetGamePersonalDataEntries_Request::has_steamid() const {
  return _has_bit(1);
}
inline void CCommunity_GetGamePersonalDataEntries_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 CCommunity_GetGamePersonalDataEntries_Request::steamid() const {
  return steamid_;
}
inline void CCommunity_GetGamePersonalDataEntries_Request::set_steamid(::google::protobuf::uint64 value) {
  _set_bit(1);
  steamid_ = value;
}

// optional string type = 3;
inline bool CCommunity_GetGamePersonalDataEntries_Request::has_type() const {
  return _has_bit(2);
}
inline void CCommunity_GetGamePersonalDataEntries_Request::clear_type() {
  if (type_ != &_default_type_) {
    type_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CCommunity_GetGamePersonalDataEntries_Request::type() const {
  return *type_;
}
inline void CCommunity_GetGamePersonalDataEntries_Request::set_type(const ::std::string& value) {
  _set_bit(2);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void CCommunity_GetGamePersonalDataEntries_Request::set_type(const char* value) {
  _set_bit(2);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void CCommunity_GetGamePersonalDataEntries_Request::set_type(const char* value, size_t size) {
  _set_bit(2);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCommunity_GetGamePersonalDataEntries_Request::mutable_type() {
  _set_bit(2);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  return type_;
}

// optional string continue_token = 4;
inline bool CCommunity_GetGamePersonalDataEntries_Request::has_continue_token() const {
  return _has_bit(3);
}
inline void CCommunity_GetGamePersonalDataEntries_Request::clear_continue_token() {
  if (continue_token_ != &_default_continue_token_) {
    continue_token_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CCommunity_GetGamePersonalDataEntries_Request::continue_token() const {
  return *continue_token_;
}
inline void CCommunity_GetGamePersonalDataEntries_Request::set_continue_token(const ::std::string& value) {
  _set_bit(3);
  if (continue_token_ == &_default_continue_token_) {
    continue_token_ = new ::std::string;
  }
  continue_token_->assign(value);
}
inline void CCommunity_GetGamePersonalDataEntries_Request::set_continue_token(const char* value) {
  _set_bit(3);
  if (continue_token_ == &_default_continue_token_) {
    continue_token_ = new ::std::string;
  }
  continue_token_->assign(value);
}
inline void CCommunity_GetGamePersonalDataEntries_Request::set_continue_token(const char* value, size_t size) {
  _set_bit(3);
  if (continue_token_ == &_default_continue_token_) {
    continue_token_ = new ::std::string;
  }
  continue_token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCommunity_GetGamePersonalDataEntries_Request::mutable_continue_token() {
  _set_bit(3);
  if (continue_token_ == &_default_continue_token_) {
    continue_token_ = new ::std::string;
  }
  return continue_token_;
}

// -------------------------------------------------------------------

// CCommunity_GetGamePersonalDataEntries_Response

// optional uint32 gceresult = 1;
inline bool CCommunity_GetGamePersonalDataEntries_Response::has_gceresult() const {
  return _has_bit(0);
}
inline void CCommunity_GetGamePersonalDataEntries_Response::clear_gceresult() {
  gceresult_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CCommunity_GetGamePersonalDataEntries_Response::gceresult() const {
  return gceresult_;
}
inline void CCommunity_GetGamePersonalDataEntries_Response::set_gceresult(::google::protobuf::uint32 value) {
  _set_bit(0);
  gceresult_ = value;
}

// repeated string entries = 2;
inline int CCommunity_GetGamePersonalDataEntries_Response::entries_size() const {
  return entries_.size();
}
inline void CCommunity_GetGamePersonalDataEntries_Response::clear_entries() {
  entries_.Clear();
}
inline const ::std::string& CCommunity_GetGamePersonalDataEntries_Response::entries(int index) const {
  return entries_.Get(index);
}
inline ::std::string* CCommunity_GetGamePersonalDataEntries_Response::mutable_entries(int index) {
  return entries_.Mutable(index);
}
inline void CCommunity_GetGamePersonalDataEntries_Response::set_entries(int index, const ::std::string& value) {
  entries_.Mutable(index)->assign(value);
}
inline void CCommunity_GetGamePersonalDataEntries_Response::set_entries(int index, const char* value) {
  entries_.Mutable(index)->assign(value);
}
inline void CCommunity_GetGamePersonalDataEntries_Response::set_entries(int index, const char* value, size_t size) {
  entries_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCommunity_GetGamePersonalDataEntries_Response::add_entries() {
  return entries_.Add();
}
inline void CCommunity_GetGamePersonalDataEntries_Response::add_entries(const ::std::string& value) {
  entries_.Add()->assign(value);
}
inline void CCommunity_GetGamePersonalDataEntries_Response::add_entries(const char* value) {
  entries_.Add()->assign(value);
}
inline void CCommunity_GetGamePersonalDataEntries_Response::add_entries(const char* value, size_t size) {
  entries_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CCommunity_GetGamePersonalDataEntries_Response::entries() const {
  return entries_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CCommunity_GetGamePersonalDataEntries_Response::mutable_entries() {
  return &entries_;
}

// optional string continue_token = 3;
inline bool CCommunity_GetGamePersonalDataEntries_Response::has_continue_token() const {
  return _has_bit(2);
}
inline void CCommunity_GetGamePersonalDataEntries_Response::clear_continue_token() {
  if (continue_token_ != &_default_continue_token_) {
    continue_token_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CCommunity_GetGamePersonalDataEntries_Response::continue_token() const {
  return *continue_token_;
}
inline void CCommunity_GetGamePersonalDataEntries_Response::set_continue_token(const ::std::string& value) {
  _set_bit(2);
  if (continue_token_ == &_default_continue_token_) {
    continue_token_ = new ::std::string;
  }
  continue_token_->assign(value);
}
inline void CCommunity_GetGamePersonalDataEntries_Response::set_continue_token(const char* value) {
  _set_bit(2);
  if (continue_token_ == &_default_continue_token_) {
    continue_token_ = new ::std::string;
  }
  continue_token_->assign(value);
}
inline void CCommunity_GetGamePersonalDataEntries_Response::set_continue_token(const char* value, size_t size) {
  _set_bit(2);
  if (continue_token_ == &_default_continue_token_) {
    continue_token_ = new ::std::string;
  }
  continue_token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCommunity_GetGamePersonalDataEntries_Response::mutable_continue_token() {
  _set_bit(2);
  if (continue_token_ == &_default_continue_token_) {
    continue_token_ = new ::std::string;
  }
  return continue_token_;
}

// -------------------------------------------------------------------

// CCommunity_TerminateGamePersonalDataEntries_Request

// optional uint32 appid = 1;
inline bool CCommunity_TerminateGamePersonalDataEntries_Request::has_appid() const {
  return _has_bit(0);
}
inline void CCommunity_TerminateGamePersonalDataEntries_Request::clear_appid() {
  appid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CCommunity_TerminateGamePersonalDataEntries_Request::appid() const {
  return appid_;
}
inline void CCommunity_TerminateGamePersonalDataEntries_Request::set_appid(::google::protobuf::uint32 value) {
  _set_bit(0);
  appid_ = value;
}

// optional uint64 steamid = 2;
inline bool CCommunity_TerminateGamePersonalDataEntries_Request::has_steamid() const {
  return _has_bit(1);
}
inline void CCommunity_TerminateGamePersonalDataEntries_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 CCommunity_TerminateGamePersonalDataEntries_Request::steamid() const {
  return steamid_;
}
inline void CCommunity_TerminateGamePersonalDataEntries_Request::set_steamid(::google::protobuf::uint64 value) {
  _set_bit(1);
  steamid_ = value;
}

// -------------------------------------------------------------------

// CCommunity_TerminateGamePersonalDataEntries_Response

// optional uint32 gceresult = 1;
inline bool CCommunity_TerminateGamePersonalDataEntries_Response::has_gceresult() const {
  return _has_bit(0);
}
inline void CCommunity_TerminateGamePersonalDataEntries_Response::clear_gceresult() {
  gceresult_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CCommunity_TerminateGamePersonalDataEntries_Response::gceresult() const {
  return gceresult_;
}
inline void CCommunity_TerminateGamePersonalDataEntries_Response::set_gceresult(::google::protobuf::uint32 value) {
  _set_bit(0);
  gceresult_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< EGCSystemMsg>() {
  return EGCSystemMsg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ESOMsg>() {
  return ESOMsg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< EGCBaseClientMsg>() {
  return EGCBaseClientMsg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< EGCToGCMsg>() {
  return EGCToGCMsg_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#if _MSC_VER >= 1300
#ifndef _PS3
#pragma warning( pop )
#endif // _PS3
#endif // _MSC_VER
#if _GNUC
#ifndef _PS3
#pragma GCC diagnostic pop
#endif // _PS3
#endif // _GNUC

#endif  // PROTOBUF_gcsystemmsgs_2eproto__INCLUDED
